name: Build and test

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  CARGO_TERM_COLOR: always

jobs:
  check-style:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Install Rust formatter
      run: rustup component add rustfmt
    - name: Check if code is well formatted
      run: cargo fmt --check

  unit-tests: # run before build because it is faster
    needs: check-style
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        edhoc_lib: [hacspec, rust]
        crypto: [hacspec, psa]
        exclude:
          - edhoc_lib: rust
            crypto: hacspec

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Run unit tests
      run: cargo test --no-default-features --package edhoc-rs --package edhoc-crypto ${{ matrix.edhoc_lib == 'hacspec' && '--package edhoc-hacspec' || '' }} --features="${{ matrix.edhoc_lib }}-${{ matrix.crypto }}" --no-fail-fast


  build-edhoc-package:
    needs: unit-tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        edhoc_lib: [hacspec, rust]
        crypto: [hacspec, psa, psa-baremetal, cryptocell310]
        exclude:
          - edhoc_lib: rust
            crypto: hacspec

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Cache apt packages
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: gcc-arm-none-eabi qemu-system-arm
        version: 2.0

    - name: Install arm targets for Rust
      run: rustup target add thumbv7m-none-eabi && rustup target add thumbv7em-none-eabihf

    - name: Build
      run: cargo build --package edhoc-rs --package edhoc-crypto --no-default-features --features="${{ matrix.edhoc_lib }}-${{ matrix.crypto }}" --release


  run-example-on-qemu:
    needs: unit-tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        config: [hacspec-psa, rust-psa]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Cache apt packages
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: gcc-arm-none-eabi qemu-system-arm
        version: 2.0

    - name: Install arm targets for Rust
      run: rustup target add thumbv7m-none-eabi

    - name: Run tests in QEMU
      run: cd examples/edhoc-rs-no_std && cargo run --target="thumbv7m-none-eabi" --no-default-features --features="${{ matrix.config }}" --release


  build-example-for-cortex-m4:
    needs: unit-tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        edhoc_lib: [hacspec, rust]
        crypto: [psa, cryptocell310]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Cache apt packages
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: gcc-arm-none-eabi qemu-system-arm
        version: 2.0

    - name: Install arm targets for Rust
      run: rustup target add thumbv7em-none-eabihf

    - name: Build example
      run: cd examples/edhoc-rs-no_std && cargo build --target="thumbv7em-none-eabihf" --no-default-features --features="${{ matrix.edhoc_lib }}-${{ matrix.crypto }}, rtt" --release
